"""setup models

Revision ID: 911fde0229d5
Revises: 
Create Date: 2024-03-25 21:55:31.297264

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '911fde0229d5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('counter', sa.Integer(), nullable=False),
    sa.Column('categories', sa.JSON(), nullable=False),
    sa.Column('about_me', sa.String(length=140), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('gid',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.String(length=140), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('recurrence', sa.Boolean(), nullable=False),
    sa.Column('recurrence_rhythm', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('category', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('gid', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_gid_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_gid_user_id'), ['user_id'], unique=False)

    op.create_table('gud',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.String(length=140), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('gid_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['gid_id'], ['gid.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('gud', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_gud_gid_id'), ['gid_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_gud_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_gud_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('gud', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_gud_user_id'))
        batch_op.drop_index(batch_op.f('ix_gud_timestamp'))
        batch_op.drop_index(batch_op.f('ix_gud_gid_id'))

    op.drop_table('gud')
    with op.batch_alter_table('gid', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_gid_user_id'))
        batch_op.drop_index(batch_op.f('ix_gid_timestamp'))

    op.drop_table('gid')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    # ### end Alembic commands ###
